NDSummary.OnToolTipsLoaded("File:modules/pit_apex/packages/pit_apex_pkg.pks",{543:"<div class=\"NDToolTip TClass LSQL\"><div class=\"TTSummary\">Implementation package for type PIT_APEX</div></div>",552:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype552\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> get_apex_triggered_context</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return varchar2</span></div></div><div class=\"TTSummary\">Method to retrieve the name of the context that is used for logging if APEX is set to DEBUG mode.&nbsp; Is called from the APEX session adapter PIT_APEX_ADAPTER</div></div>",533:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype533\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> log(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_message&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> message_type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to write log information to the APEX debug stack.&nbsp; Method implements the PIT_APEX log member procedure and writes the message attributes to the APEX debug stack.</div></div>",537:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype537\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> log (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_log_state&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> log_state_type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to write state information to the APEX debug stack.&nbsp; Method implements the PIT_APEX log member procedure overload for LOG_STATE_TYPE and writes the key value pairs of MSG_PARAM to the console.</div></div>",538:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype538\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> print(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_message&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> message_type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to write general information to the APEX application.&nbsp; Method implements the PIT_APEX print member procedure of type PIT_APEX and writes the message attributes to the APEX http stream.</div></div>",539:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype539\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> notify(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_message&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> message_type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to write log information to the APEX application.</div></div>",540:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype540\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> enter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_call_stack&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> call_stack_type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to write call stack information on enter to the APEX debug stack.</div></div>",541:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype541\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> leave(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_call_stack&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> call_stack_type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to write call stack information on leave to the APEX debug stack.</div></div>",542:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype542\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> initialize_module(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">self&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in out nocopy</span> pit_apex</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Initialization method for PIT_APEX output module.</div></div>"});